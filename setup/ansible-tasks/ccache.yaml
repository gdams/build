---
# Downloads and installs ccache

- name: CCache | Latest ccache release version
  local_action: shell curl -sL https://www.samba.org/ftp/ccache/ | awk '{ if (match($0, />ccache-(([0-9]+)\.([0-9]+)\.?([0-9]+)?)\.tar\.gz</, a)) { if (a[2]+0 > maxmaj || (a[2]+0 == maxmaj && a[3]+0 > maxmin) || (a[2]+0 == maxmaj && a[3]+0 == maxmin && a[4]+0 > maxpat)) { maxmaj = a[2]+0; maxmin = a[3]+0; maxpat = a[4]+0; } } } END { printf "%s.%s.%s\n", maxmaj, maxmin, maxpat }'
  register: ccache_latest_result
  tags: ccache

- name: CCache | Extract version string
  set_fact:
    ccache_latest: "{{ ccache_latest_result.stdout }}"
  tags: ccache

- name: CCache | Check ccache --version
  shell: ccache --version
  ignore_errors: true
  register: installed_version
  tags: ccache

- name: CCache | Compare installed version matches
  set_fact:
    ccache_proceed: "{{ installed_version.stdout.find(ccache_latest) == -1 }}"
  tags: ccache

- name: CCache | Download ccache-{{ ccache_latest }}
  get_url: url=https://www.samba.org/ftp/ccache/ccache-{{ ccache_latest }}.tar.gz dest=/tmp/
  register: new_archive
  when: ccache_proceed
  tags: ccache

- name: CCache | Extract ccache-{{ ccache_latest }}
  unarchive: src=/tmp/ccache-{{ ccache_latest }}.tar.gz dest=/tmp/ copy=no
  when: ccache_proceed and new_archive|changed
  tags: ccache

- name: CCache | Prepare for compilation by running configure
  shell: ./configure chdir=/tmp/ccache-{{ ccache_latest }} >> /dev/null
  when: ccache_proceed
  tags: ccache

- name: CCache | Compile ccache
  shell: make -j{{ ansible_processor_vcpus }}
  args:
    chdir: /tmp/ccache-{{ ccache_latest }}
  when: ccache_proceed
  tags: ccache

- name: CCache | Install generated binary
  command: install -c -m 755 ccache /usr/local/bin
  args:
    chdir: /tmp/ccache-{{ ccache_latest }}
  when: ccache_proceed
  tags: ccache

- name: CCache | Create symlinks in /usr/local/bin/
  file: src=/usr/local/bin/ccache dest=/usr/local/bin/{{ item }} state=link
  with_items:
    - gcc
    - cc
    - g++
    - c++
  when: ccache_proceed
  tags: ccache

- name: CCache | Cleanup
  file: path="{{ item }}" state=absent
  with_items:
    - /tmp/ccache-{{ ccache_latest }}.tar.gz
    - /tmp/ccache-{{ ccache_latest }}
  when: ccache_proceed
  tags: ccache
